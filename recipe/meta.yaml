{% set provider = "oci" %}
{% set goname = "github.com/oracle/terraform-provider-"+provider.lower() %}
{% set version = "7.17.0" %}

{% set name = goname.split('/')[-1] %}

{% set plugin_dir = "plugins/registry.terraform.io/hashicorp/" + provider.lower() + "/" + version %}
{% set x4_plugin = name + '_v' + version %}

package:
  name: {{ name|lower }}
  version: {{ version }}

source:
  url: https://{{ goname }}/archive/v{{ version }}.tar.gz
  sha256: c8d14e7e287e05e8dc191548db31b2beaae64c3884886621ac3b931fa1bd2b43

build:
  number: 0
  skip: true  # [win]
  script:
    - go build -v -o {{ target_gobin }}..{{ os.sep }}{{ plugin_dir }}{{ os.sep }}{{ target_goos }}_{{ target_goarch }}{{ os.sep }}{{ x4_plugin }}{{ target_goexe }}

requirements:
  build:
    - {{ compiler('go') }} >=1.23

test:
  requires:
    - terraform >=1

  commands:
    # Create a sample init.tf loading the provider
    - echo 'provider "{{ provider|lower }}" { version="{{ version }}" }' > init.tf  # [unix]
    - echo provider "{{ provider|lower }}" { version="{{ version }}" } > init.tf    # [win]

    # Initialize
    - terraform init --plugin-dir={{ target_gobin }}..{{ os.sep }}plugins

    # Tests that init was successful
    - test -f .terraform.lock.hcl              # [unix]
    - if not exist .terraform.lock.hcl exit 1  # [win]

    # Test that the provider was not downloaded
    - test ! -f .terraform/plugins/{{ plugin_dir }}/{{ target_goos }}_{{ target_goarch }}/README.md  # [unix]
    - if exist .terraform\plugins\{{ plugin_dir }}\{{ target_goos }}_{{ target_goarch }}/README.md exit 1  # [win]

about:
  home: https://{{ goname }}
  license: MPL-2.0
  summary: The Terraform Oracle Cloud Infrastructure (OCI) provider
  doc_url: https://registry.terraform.io/providers/oracle/oci/latest/docs
  dev_url: https://{{ goname }}

extra:
  recipe-maintainers:
    - tp-jssk
